@use 'sass:math';

@import 'variables';

body {
    background-color: rgb(255, 255, 255);
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap: 50px
}

.animation-circle {
    position: relative;
    border: 1px solid #ccc;
    height: 70px;
    width: 300px;

    .circle {
        position: absolute;
        width: 20px;
        height: 20px;
        border-radius: 100%;
        background-color: turquoise;
        animation: move 1s infinite;
        transform-origin: center center;
    }

    @for $num from 1 through 8 {
        .circle:nth-child(#{$num}) {
            left: $num * 30px;
            animation-delay: $num * 0.1s;
        }
    }

    @keyframes move {
        0% {
            transform: translateY(0px) scale(1);
            background-color: turquoise;
        }

        50% {
            transform: translateY(50px) scale(0.4);
            background-color: blue;
        }

        100% {
            transform: translateY(0px) scale(1);
            background-color: turquoise;
        }
    }
}




@function border-pipeline($transition-duration, $pipes) {
    @return $transition-duration * $pipes;
}

@mixin border-animation($dimension, $easing, $pipes) {
    transition: $transition-duration $dimension $easing border-pipeline($transition-duration, $pipes, );
    -webkit-transition: $transition-duration $dimension $easing border-pipeline($transition-duration, $pipes, );
}

.box {
    width: $width;
    height: $height;
    background-color: $background-color;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    border: $border;
    transition: all 0.3s ease;

    &::before {
        content: '';
        position: absolute;
        top: -$stroke;
        left: -$stroke;
        width: 0;
        height: 2px;
        background: red;

        @include border-animation(width, ease, 3);
    }

    &::after {
        content: '';
        position: absolute;
        top: -$stroke;
        right: -$stroke;
        width: 2px;
        height: 0;
        background: red;
        transition: all 0.3s ease 0.4s;
        @include border-animation(height, ease, 2);
    }

    &-inner::before {
        content: '';
        position: absolute;
        bottom: -$stroke;
        right: -$stroke;
        width: 0;
        height: 2px;
        background: red;
        transition: all 0.3s ease 0.2s;
        @include border-animation(width, ease, 1);
    }

    &-inner::after {
        content: '';
        position: absolute;
        bottom: -$stroke;
        left: -$stroke;
        width: 2px;
        height: 0%;
        background: red;
        transition: all 0.3s ease 0.0s;
        @include border-animation(height, ease, 0);
    }

    &:hover {
        background-color: #fff;
        border-color: transparent;

        &::before {
            width: $pipes_width;
            @include border-animation(width, ease, 0);
        }

        &::after {
            height: $pipes_height;
            @include border-animation(height, ease, 1);
        }

        .box-inner::before {
            width: $pipes_width;
            @include border-animation(width, ease, 2);
        }

        .box-inner::after {
            height: $pipes_height;
            @include border-animation(height, ease, 3);
        }
    }
}


$transition-speed: math.div(1s, 50px);


@mixin move($left-start, $left-stop, $color, $hv-color) {
    // right:$left-start - $left-stop;
    position: relative;
    left: $left-start;
    transition: left ($left-stop - $left-start) * $transition-speed;
    background-color: $color;

    &:hover {
        left: $left-stop;
        background-color: $hv-color;
    }

}

.slider {
    @include move(10px, 50px, #f5f5f5, #ff00ff);
    padding: nth($spacing, 3);
    // border-radius: nth($radius, 1);
    border-radius: length($radius);

}
